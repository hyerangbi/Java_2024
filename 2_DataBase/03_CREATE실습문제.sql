DROP TABLE MEM;
DROP TABLE MEM_CHECK;
DROP TABLE MEM_GRADE;
DROP TABLE MEM_PRI;
DROP TABLE MEM_PRI2;
DROP TABLE MEM_UNIQUE;
DROP TABLE TB_LIKE;
DROP TABLE TB_MEMBER;
DROP TABLE MEM_NOTNULL;

--실습문제 --
--도서관리 프로그램을 만들기 위한 테이블들 만들기--
--이때, 제약조건에 이름을 부여할 것
--   각 컬럼에 주석달기

DROP TABLE MEMBER;
DROP TABLE TB_BOOK;
DROP TABLE TB_PUBLISHER;

/*
    1. 출판사들에 대한 데이터를 담기위한 출판사 테이블(TB_PUBLISHER)
    컬럼 : PUB_NO(출판사 번호) - 기본키(PUBLISHER_PK)
          PUB_NAME(출판사명) -- NOT NULL(PUBLISHER_NN)
          PHONE(출판사전화번호) -- 제약조건없음
*/
CREATE TABLE TB_PUBLISHER(
    PUB_NO NUMBER CONSTRAINT TB_PUBLISHER_PK PRIMARY KEY, -- 출판사번호
    PUB_NAME VARCHAR2(50) CONSTRAINT TB_PUBLISHER_NN NOT NULL, -- 출판사 명 
    PHONE VARCHAR2(15) --출판사 전화번호
);

COMMENT ON COLUMN TB_PUBLISHER.PUB_NO IS '출판사 번호';
COMMENT ON COLUMN TB_PUBLISHER.PUB_NAME IS '출판사 명';
COMMENT ON COLUMN TB_PUBLISHER.PHONE IS '출판사 전화번호';

--샘플 3개정도 생성
INSERT INTO TB_PUBLISHER VALUES (32456, '하나출판사', '49-124-5839');
INSERT INTO TB_PUBLISHER VALUES (28593, '여긴출판사', '49-153-7752');
INSERT INTO TB_PUBLISHER VALUES (1639, '책출판사', '50-325-7514');

SELECT * FROM TB_PUBLISHER;
/*
    2. 도서들에 대한 데이터를 담기위한 도서 테이블(TB_BOOK)
    컬럼 : BK_NO(도서번호)--기본키(BOOK_PK)
          BK_TITLE(도서명)--NOT NULL(BOOK__NN_TITLE)
          BK_AUTHOR(저자명)--NOT NULL(BOOK__NN_AUTHOR)
          BK_PRICE(가격)-- 제약조건없음
          BK_PUB_NO(출판사 번호)--외래키(BOOK_FK)(TB_PUBLISHER테이블을 참조)
                                이때 참조하고 있는 부모데이터 삭제시 자식데이터도 삭제 되도록 옵션지정
                                
*/
CREATE TABLE TB_BOOK(
    BK_NO NUMBER CONSTRAINT BOOK_PK PRIMARY KEY, -- 도서번호
    BK_TITLE VARCHAR2(50) CONSTRAINT BOOK_NN_TITLE NOT NULL, --도서명
    BK_AUTHOR VARCHAR2(10) NOT NULL, --저자명
    BK_PRICE NUMBER, --가격
    BK_PUB_NO NUMBER, --출판사번호
    CONSTRAINT BOOK_FK FOREIGN KEY(BK_PUB_NO) REFERENCES TB_PUBLISHER(PUB_NO) ON DELETE CASCADE
);

COMMENT ON COLUMN TB_BOOK.BK_NO IS '도서번호';
COMMENT ON COLUMN TB_BOOK.BK_TITLE IS '도서 명';
COMMENT ON COLUMN TB_BOOK.BK_AUTHOR IS '저자 명';
COMMENT ON COLUMN TB_BOOK.BK_PRICE IS '가격';
COMMENT ON COLUMN TB_BOOK.BK_PUB_NO IS '출판사번호';

--5개 정도의 샘플 데이터 추가하기

INSERT INTO TB_BOOK VALUES(351, '짜잔이거봐', '이제', 6500, 28593);
INSERT INTO TB_BOOK VALUES(359, '졸리다', '안돼', 7000, 32456);
INSERT INTO TB_BOOK VALUES(00572, '여긴산', '최고', 13500, 1639);
INSERT INTO TB_BOOK VALUES(44879, '당신도 할 수 있는 최고의 요리', '못해', 18500,28593);
INSERT INTO TB_BOOK VALUES(13995, '저도 졸려요', 'Zzz', 13500,28593);

SELECT * FROM TB_BOOK;

/*
    3. 회원에 대한 데이터를 담기위한 회원 테이블(TB_MEMBER)
    컬럼명 : MEMBER_NO(회원번호) -- 기본키(MEMBER_PK)
            MEMBER_ID(아이디) -- 중복금지(MEMBER_UQ_ID)
            MEMBER_PWD(비밀번호) -- NOT NULL(MEMBER_NN_PWD)
            MEMBER_NAME(회원명) -- NOT NULL(MEMBER_NN_NAME)
            GENDER(성별) -- M또는 F로 입력되도록 제한(MEMBER_CK_GEN)
            ADDRESS(주소) -- 제약조건없음
            PHONE(연락처)-- 제약조건없음
            STATUS(탈퇴여부) -- 기본값을 N으로 지정, 그리고 N또는 Y만 입력되도록 제약조건 설정(MEMBER_CK_STA)
            ENROLL_DATE(가입일) -- 기본값으로 SYSDATE, NOT NULL 제약조건(MEMBER_NN_EN)
*/
CREATE TABLE TB_MEMBER(
    MEMBER_NO NUMBER CONSTRAINT MEMBER_PK PRIMARY KEY,
    MEMBER_ID VARCHAR2(20) CONSTRAINT MEMBER_UQ_ID UNIQUE NOT NULL,
    MEMBER_PWD VARCHAR2(20) CONSTRAINT MEMBER_NN_PWD NOT NULL,
    MEMBER_NAME VARCHAR2(20) CONSTRAINT MEMBER_NN_NAME NOT NULL,
    GENDER CHAR(1) CONSTRAINT MEMBER_CK_GEN CHECK(GENDER IN('M', 'F')),
    ADDRESS VARCHAR2(50),
    PHONE VARCHAR2(14),
    STATUS CHAR(1) DEFAULT 'N' CONSTRAINT MEMBER_CK_STA CHECK(STATUS IN('N','Y')),
    ENROLL_DATE DATE DEFAULT SYSDATE CONSTRAINT MEMBER_NN_EN NOT NULL
);

COMMENT ON COLUMN TB_MEMBER.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TB_MEMBER.MEMBER_ID IS '회원아이디';
COMMENT ON COLUMN TB_MEMBER.MEMBER_PWD IS '회원비밀번호';
COMMENT ON COLUMN TB_MEMBER.MEMBER_NAME IS '회원이름';
COMMENT ON COLUMN TB_MEMBER.GENDER IS '회원성별';
COMMENT ON COLUMN TB_MEMBER.ADDRESS IS '회원주소';
COMMENT ON COLUMN TB_MEMBER.PHONE IS '회원연락처';
COMMENT ON COLUMN TB_MEMBER.STATUS IS '탈퇴여부';
COMMENT ON COLUMN TB_MEMBER.ENROLL_DATE IS '가입일';

--5개 정도의 샘플 데이터 추가하기
INSERT INTO TB_MEMBER VALUES(201, 'USER1', 'PASS1', '김회원','M','',NULL,DEFAULT, DEFAULT );
INSERT INTO TB_MEMBER VALUES(202, 'USER2', 'PASS2', '이회원','M','','010-2245-7758',DEFAULT, DEFAULT );
INSERT INTO TB_MEMBER VALUES(203, 'USER3', 'PASS3', '박회원','F','','010-4567-1546',DEFAULT, DEFAULT );
INSERT INTO TB_MEMBER VALUES(204, 'USER4', 'PASS4', '최회원','M','','010-7812-4525',DEFAULT, DEFAULT );
INSERT INTO TB_MEMBER VALUES(205, 'USER5', 'PASS5', '정회원','F','','010-1679-9975',DEFAULT, DEFAULT );

SELECT * FROM TB_MEMBER;

/*
    4.어떤 회원이 어떤 도서를 대여했는지에 대한 대여목록 테이블(TB_RENT)
    컬럼명 : RENT_NO(대여번호)-- 기본키(RENT_PK)
            RENT_MEM_NO(대여회원번호)-- 외래키(RENT_FK_MEM) TB_MEMBER와 참조하도록
                                        이때 부모 데이터 삭제시 자식데이터 값이 NULL이 되도록 지정
            RENT_BOOK_NO(대여도서번호)-- 외래키(RENT_FK_BOOK) TB_BOOK와 참조하도록
                                        이때 부모 데이터 삭제시 자식데이터 값이 NULL이 되도록 지정
            RENT_DATE(대여일) -- 기본값 SYSDATE
*/

CREATE TABLE TB_RENT(
    RENT_NO NUMBER CONSTRAINT RENT_PK PRIMARY KEY,
    RENT_MEM_NO NUMBER,
    RENT_BOOK_NO NUMBER,
    RENT_DATE DATE DEFAULT SYSDATE,
    CONSTRAINT REM_FK_MEM FOREIGN KEY(RENT_MEM_NO) REFERENCES TB_MEMBER ON DELETE SET NULL,
    CONSTRAINT REM_FK_BOOK FOREIGN KEY(RENT_BOOK_NO) REFERENCES TB_BOOK ON DELETE SET NULL
);

COMMENT ON COLUMN TB_RENT.RENT_NO IS '대여번호';
COMMENT ON COLUMN TB_RENT.RENT_MEM_NO IS '대여회원번호';
COMMENT ON COLUMN TB_RENT.RENT_BOOK_NO IS '대여도서번호';
COMMENT ON COLUMN TB_RENT.RENT_DATE IS '대여일';

--3개 정도의 샘플 데이터 추가하기
INSERT INTO TB_RENT VALUES (87756, 203, 44879,'24/08/02');
INSERT INTO TB_RENT VALUES (87757, 205, 572, DEFAULT);
INSERT INTO TB_RENT VALUES (87758, 202, 351, DEFAULT);


SELECT * FROM TB_RENT
JOIN TB_MEMBER ON(RENT_MEM_NO = MEMBER_NO)
JOIN TB_BOOK ON(RENT_BOOK_NO = BK_NO);


