<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<!-- namespace : 해당 mapper파일의 고유한 별칭 -->

<mapper namespace="memberMapper">
	<resultMap type="Member" id="memberResultSet">
		<!-- <result column="테이블 컬럼명" property="객체의 필드명"/> -->
		<result column="USER_ID" property="userId" />
		<result column="USER_PWD" property="userPwd" />
		<result column="USER_NAME" property="userName" />
		<result column="EMAIL" property="email" />
		<result column="GENDER" property="gender" />
		<result column="AGE" property="age" />		
		<result column="PHONE" property="phone" />
		<result column="ADDRESS" property="address" />
		<result column="ENROLL_DATE" property="enrollDate" />
		<result column="MODIFY_DATE" property="modifyDate" />
		<result column="STATUS" property="status" />
	</resultMap>
	<!-- 
		* SELECT문 전송 시
		<select id="각 sql문의 식별자" [parameterType="전달받을 자바타입"] resultMap="결과객체" | resultType="결과타입">
								    ↪없으면 생략해도 된다               ↪ mapper 에서  
	 -->
	 <!-- 로그인 쿼리 -->
  <select id="loginMember" parameterType="Member" resultMap="memberResultSet">
    SELECT USER_ID,
    	   USER_PWD,
    	   USER_NAME,
    	   EMAIL,    	   
    	   GENDER,
    	   AGE,
    	   PHONE,
    	   ADDRESS,
    	   ENROLL_DATE,
    	   MODIFY_DATE,
    	   STATUS
      FROM MEMBER
     WHERE USER_ID = #{userId}
       <!-- AND USER_PWE = #{userPwd} -->
       AND STATUS = 'Y'    	   
  </select>
  
   <select id="idCheck" resultType="_int">
  	SELECT COUNT(*)
  	  FROM MEMBER
  	 WHERE USER_ID = #{checkId}
  </select>  
  <!-- 
  		*DML 문일 경우
  		<insert | update | delete id ="식별자"> [parameterType="전달받을 자바타입"] // id ="식별자"는 반드시 들어가야한다.
   --> 
   
   <!-- 회원가입 -->
   <insert id="insertMember">
   	INSERT INTO MEMBER( 
   		   USER_ID,
   		   USER_PWD,
   		   USER_NAME,
   		   EMAIL,
   		   GENDER,
   		   AGE,
   		   PHONE,
   		   ADDRESS   		   
   		   ) VALEUS (
   		   	#{userId},
   		   	#{userPwd},
   		   	#{userName},
   		   	#{email},
   		   	#{gender},
   		   	#{age},
   		   	#{phone},
   		   	#{address}
   		   )
   </insert>
   
   <!-- 회원 정보 수정 -->
   <update id="updateMember">
   	UPDATE MEMBER
   	   SET USER_NAME = #{userName},
   	       EMAIL = #{email},
   	       GENDER = #{gender},
   	       AGE = #{age},
   	       ADDRESS = #{address},
   	       MODIFY_DATE =SYSDATE
   	 WHERE USER_ID = #{userId}
   </update>
   
   <!-- 회원 탈퇴 -->
   <update id="deleteMember">
   	UPDATE MEMBER
   	   SET STATUS = 'N'
   	 WHERE USER_ID = #{userId}
   </update>
</mapper>
